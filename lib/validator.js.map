{"version":3,"sources":["validator.js"],"names":["validator","allErrors","v5","coerceTypes","addFormat","validate","value","test","compare","a","b","Date","type","isNaN","parseFloat","KEYWORD_PRIORITY","format","formatMinimum","formatMaximum","shouldReplaceError","error1","error2","keyword","schema","state","props","origin","compile","valid","errors","reduce","validity","error","dataPath","params","message","missingProperty","slice","name"],"mappings":"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","file":"validator.js","sourcesContent":["/**\n * @file 默认校验器\n * @author leon <ludafa@outlook.com>\n */\n\nimport Ajv from 'ajv';\nimport localize from 'ajv-i18n/localize/zh';\n\nconst validator = new Ajv({\n    allErrors: true,\n    v5: true,\n    coerceTypes: false\n});\n\nvalidator.addFormat('color', /^#[0-9a-fA-F]{6}$/i);\n\nvalidator.addFormat('date', {\n    validate(value) {\n        return /^\\d\\d\\d\\d-[01]\\d-[0-3]\\d$/.test(value);\n    },\n    compare(a, b) {\n\n        if (a === b) {\n            return 0;\n        }\n\n        if (!a && b) {\n            return -1;\n        }\n\n        if (a && !b) {\n            return 1;\n        }\n\n        return new Date(a) - new Date(b);\n    }\n});\n\nvalidator.addFormat('numeric', {\n    validate(value) {\n        let type = typeof value;\n        return (type === 'number' || type === 'string')\n            && !isNaN(value - parseFloat(value));\n    },\n    compare(a, b) {\n        return a - b;\n    }\n});\n\nvalidator.addFormat(\n    'date-time',\n    /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d$/i\n);\n\n// 用于做出错排序\nconst KEYWORD_PRIORITY = {\n    type: 1,\n    format: 2,\n    formatMinimum: 3,\n    formatMaximum: 4\n};\n\nfunction shouldReplaceError(error1, error2) {\n    return KEYWORD_PRIORITY[error1.keyword] - KEYWORD_PRIORITY[error2.keyword] > 0;\n}\n\nexport default () => {\n\n    let validate = null;\n    let schema = null;\n\n    return (state, props, origin) => {\n\n        if (!validate || props.schema !== schema) {\n            validate = validator.compile(props.schema);\n            schema = props.schema;\n        }\n\n        let valid = validate(state.value);\n\n        localize(validate.errors);\n\n        return valid\n            ? null\n            : validate.errors.reduce((validity, error) => {\n\n                let {\n                    dataPath,\n                    keyword,\n                    params,\n                    message\n                } = error;\n\n                if (keyword === 'required' && params.missingProperty) {\n                    dataPath = `${dataPath}.${params.missingProperty}`;\n                    message = '请填写此项';\n                }\n\n                if (dataPath[0] === '.') {\n                    dataPath = dataPath.slice(1);\n                }\n\n                if (!validity[dataPath] || shouldReplaceError(validity[dataPath], error)) {\n                    validity[dataPath] = {\n                        ...error,\n                        name: dataPath,\n                        message\n                    };\n                }\n\n                return validity;\n\n            }, {});\n\n    };\n\n};\n"],"sourceRoot":"/source/"}