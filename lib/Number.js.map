{"version":3,"sources":["Number.js"],"names":["main","NumberComponent","render","props","schema","name","variants","rest","value","state","push","title","type","onChange","target","registerComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;QASYA,I;;QAESC,e;;;;;;;;kCAEjBC,M,qBAAS;AAAA;;AAAA,yBAOD,KAAKC,KAPJ;AAAA,gBAGDC,MAHC,UAGDA,MAHC;AAAA,gBAIDC,IAJC,UAIDA,IAJC;AAAA,yCAKDC,QALC;AAAA,gBAKDA,QALC,mCAKU,EALV;AAAA,gBAMEC,IANF;;;AASL,gBAAMC,QAAQ,KAAKC,KAAL,CAAWD,KAAzB;;AAEAF,qBAASI,IAAT,CAAc,OAAd;;AAEA,mBACI;AAAA;AAAA,kBAAK,WAAU,yBAAf;AACI;AAAA;AAAA,sBAAO,OAAO,CAAd;AAAkBN,2BAAOO;AAAzB,iBADJ;AAEI,mGACQJ,IADR;AAEI,8BAAU,CAAC,OAAD,CAFd;AAGI,0BAAMF,IAHV;AAII,uDAAWD,MAAX,IAAmBQ,MAAM,QAAzB,GAJJ;AAKI,8BAAU,IALd;AAMI,2BAAOJ,QAAQ,CAACA,KAAT,GAAiB,EAN5B;AAOI,8BAAU,wBAAa;AAAA,4BAAXA,KAAW,QAAXA,KAAW;;AACnB,kDAAMK,QAAN,cAAe;AACXD,kCAAM,QADK;AAEXE,0CAFW;AAGXN,mCAAOA,QAAQ,CAACA,KAAT,GAAiB;AAHb,yBAAf;AAKH,qBAbL;AAFJ,aADJ;AAoBH,S;;;;;yBAnCgBP,e;;;AAuCrBD,SAAKe,iBAAL,CAAuB,QAAvB,EAAiCd,eAAjC","file":"Number.js","sourcesContent":["/**\n * @file number render\n * @author leon(ludafa@outlook.com)\n */\n\nimport React from 'react';\nimport TextBox from 'melon/TextBox';\nimport Title from 'melon/Title';\nimport InputComponent from 'melon-core/InputComponent';\nimport * as main from './factory';\n\nexport default class NumberComponent extends InputComponent {\n\n    render() {\n\n        const {\n            schema,\n            name,\n            variants = [],\n            ...rest\n        } = this.props;\n\n        const value = this.state.value;\n\n        variants.push('fluid');\n\n        return (\n            <div className=\"ui-field variant-number\">\n                <Title level={4}>{schema.title}</Title>\n                <TextBox\n                    {...rest}\n                    variants={['fluid']}\n                    name={name}\n                    rules={{...schema, type: 'string'}}\n                    numberic={true}\n                    value={value ? +value : ''}\n                    onChange={({value}) => {\n                        super.onChange({\n                            type: 'change',\n                            target: this,\n                            value: value ? +value : ''\n                        });\n                    }} />\n            </div>\n        );\n\n    }\n\n}\n\nmain.registerComponent('number', NumberComponent);\n"],"sourceRoot":"/source/"}