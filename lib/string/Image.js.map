{"version":3,"sources":["string/Image.js"],"names":["Image","shouldComponentUpdate","nextProps","props","render","schema","value","onChange","name","titleClassName","title","propTypes","object","isRequired","string","func","type","media","test"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;QAWqBA,K;;;;;;;;wBAEjBC,qB,kCAAsBC,S,EAAW;AAC7B,mBAAO,CAAC,+BAAaA,SAAb,EAAwB,KAAKC,KAA7B,CAAR;AACH,S;;wBAEDC,M,qBAAS;AAAA,yBAOD,KAAKD,KAPJ;AAAA,gBAGDE,MAHC,UAGDA,MAHC;AAAA,gBAIDC,KAJC,UAIDA,KAJC;AAAA,gBAKDC,QALC,UAKDA,QALC;AAAA,gBAMDC,IANC,UAMDA,IANC;;;AASL,gBAAMC,iBAAiB,gCACnB,gBADmB,EAEnB,iBAFmB,CAAvB;;AAKA,mBACI;AAAA;AAAA,kBAAK,WAAU,yCAAf;AACI;AAAA;AAAA,sBAAQ,WAAWA,cAAnB;AAAoCJ,2BAAOK;AAA3C,iBADJ;AAEI;AACI,0BAAK,KADT;AAEI,0BAAMF,IAFV;AAGI,8BAAU,CAAC,OAAD,CAHd;AAII,2BAAOH,MAJX;AAKI,4BAAQ,kCALZ;AAMI,2BAAOC,KANX;AAOI,8BAAUC,QAPd;AAFJ,aADJ;AAcH,S;;;;;yBAlCgBP,K;;;AAsCrBA,UAAMW,SAAN,GAAkB;AACdN,gBAAQ,iBAAUO,MAAV,CAAiBC,UADX;AAEdP,eAAO,iBAAUQ,MAFH;AAGdP,kBAAU,iBAAUQ,IAAV,CAAeF;AAHX,KAAlB;;AAMA,oCAAkB,UAAUR,MAAV,EAAkB;;AAEhC,YACIA,OAAOW,IAAP,KAAgB,QAAhB,IACGX,OAAOY,KADV,IAEG,WAAWC,IAAX,CAAgBb,OAAOY,KAAP,CAAaD,IAA7B,CAHP,EAIE;AACE,mBAAOhB,KAAP;AACH;AAEJ,KAVD","file":"Image.js","sourcesContent":["/**\n * @file Image\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Uploader from 'melon/Uploader';\nimport {getUploaderHandler, registerComponent} from '../factory';\nimport {createClassName} from 'melon-core/classname/classname';\nimport shallowEqual from 'melon-core/util/shallowEqual';\n\nexport default class Image extends Component {\n\n    shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n    }\n\n    render() {\n\n        const {\n            schema,\n            value,\n            onChange,\n            name\n        } = this.props;\n\n        const titleClassName = createClassName(\n            'ui-field-title',\n            'variant-level-4'\n        );\n\n        return (\n            <div className=\"ui-field ui-field-string variant-string\">\n                <header className={titleClassName}>{schema.title}</header>\n                <Uploader\n                    size=\"xxs\"\n                    name={name}\n                    variants={['fluid']}\n                    rules={schema}\n                    upload={getUploaderHandler()}\n                    value={value}\n                    onChange={onChange} />\n            </div>\n        );\n\n    }\n\n}\n\nImage.propTypes = {\n    schema: PropTypes.object.isRequired,\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\nregisterComponent(function (schema) {\n\n    if (\n        schema.type === 'string'\n        && schema.media\n        && /^image\\//.test(schema.media.type)\n    ) {\n        return Image;\n    }\n\n});\n"]}