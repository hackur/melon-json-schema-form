{"version":3,"sources":["string/Color.js"],"names":["ColorField","shouldComponentUpdate","nextProps","props","render","schema","value","onChange","name","title","titleClassName","displayName","propTypes","object","isRequired","string","func","type","format"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;QAWqBA,U;;;;;;;;6BAEjBC,qB,kCAAsBC,S,EAAW;AAC7B,mBAAO,CAAC,+BAAaA,SAAb,EAAwB,KAAKC,KAA7B,CAAR;AACH,S;;6BAEDC,M,qBAAS;AAAA,yBAOD,KAAKD,KAPJ;AAAA,gBAGDE,MAHC,UAGDA,MAHC;AAAA,gBAIDC,KAJC,UAIDA,KAJC;AAAA,gBAKDC,QALC,UAKDA,QALC;AAAA,gBAMDC,IANC,UAMDA,IANC;;;AASL,gBAAMC,QAAQJ,OAAOI,KAArB;;AAEA,gBAAMC,iBAAiB,gCACnB,gBADmB,EAEnB,iBAFmB,CAAvB;;AAKA,mBACI;AAAA;AAAA,kBAAK,WAAU,yCAAf;AACI;AAAA;AAAA,sBAAQ,WAAWA,cAAnB;AAAoCD;AAApC,iBADJ;AAEI;AACI,0BAAK,KADT;AAEI,8BAAU,CAAC,OAAD,CAFd;AAGI,0BAAMD,IAHV;AAII,2BAAOH,MAJX;AAKI,2BAAOC,KALX;AAMI,kCAAcD,iBANlB;AAOI,8BAAUE,QAPd;AAFJ,aADJ;AAcH,S;;;;;yBApCgBP,U;;;AAwCrBA,eAAWW,WAAX,GAAyB,YAAzB;;AAEAX,eAAWY,SAAX,GAAuB;AACnBP,gBAAQ,iBAAUQ,MAAV,CAAiBC,UADN;AAEnBR,eAAO,iBAAUS,MAFE;AAGnBR,kBAAU,iBAAUS,IAAV,CAAeF;AAHN,KAAvB;;AAMA,oCAAkB,UAAUT,MAAV,EAAkB;;AAEhC,YACIA,OAAOY,IAAP,KAAgB,QAAhB,IACGZ,OAAOa,MAAP,KAAkB,OAFzB,EAGE;AACE,mBAAOlB,UAAP;AACH;AAEJ,KATD","file":"string/Color.js","sourcesContent":["/**\n * @file Color\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport ColorPicker from 'melon-colorpicker';\nimport {registerComponent} from '../factory';\nimport {createClassName} from 'melon-core/classname/classname';\nimport shallowEqual from 'melon-core/util/shallowEqual';\n\nexport default class ColorField extends Component {\n\n    shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n    }\n\n    render() {\n\n        const {\n            schema,\n            value,\n            onChange,\n            name\n        } = this.props;\n\n        const title = schema.title;\n\n        const titleClassName = createClassName(\n            'ui-field-title',\n            'variant-level-4'\n        );\n\n        return (\n            <div className=\"ui-field ui-field-string variant-string\">\n                <header className={titleClassName}>{title}</header>\n                <ColorPicker\n                    size=\"xxs\"\n                    variants={['fluid']}\n                    name={name}\n                    rules={schema}\n                    value={value}\n                    defaultValue={schema.default}\n                    onChange={onChange} />\n            </div>\n        );\n\n    }\n\n}\n\nColorField.displayName = 'ColorField';\n\nColorField.propTypes = {\n    schema: PropTypes.object.isRequired,\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\nregisterComponent(function (schema) {\n\n    if (\n        schema.type === 'string'\n        && schema.format === 'color'\n    ) {\n        return ColorField;\n    }\n\n});\n"],"sourceRoot":"/source/"}