{"version":3,"sources":["Object.js"],"names":["main","ObjectField","args","onFieldChange","bind","renderTitle","title","e","target","value","onChange","state","props","name","render","pointer","schema","level","style","uiSchema","properties","fields","map","subSchema","Field","getComponent","displayName","propTypes","object","defaultValue","isRequired","defaultProps","registerComponent","type"],"mappings":"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","file":"Object.js","sourcesContent":["/**\n * @file object render\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes} from 'react';\nimport * as main from './factory';\n\nimport InputComponent from 'melon-core/InputComponent';\nimport Title from 'melon/Title';\nimport {getOrderedKeys} from './util/getOrderedKeys';\n\nexport default class ObjectField extends InputComponent {\n\n    constructor(...args) {\n        super(...args);\n        this.onFieldChange = this.onFieldChange.bind(this);\n    }\n\n    renderTitle(title) {\n\n        if (!title) {\n            return null;\n        }\n\n        return (\n            <legend>\n                <Title level={4} size=\"xxs\">{title}</Title>\n            </legend>\n        );\n\n    }\n\n    onFieldChange(e) {\n\n        const {\n            target,\n            value\n        } = e;\n\n        this.onChange({\n            target: this,\n            value: {\n                ...this.state.value,\n                [target.props.name]: value\n            }\n        });\n\n    }\n\n    render() {\n\n        const {props, pointer} = this;\n        const {schema, level, style, uiSchema} = props;\n        const {properties, title} = schema;\n\n        const value = this.state.value;\n\n        const fields = getOrderedKeys(properties, uiSchema['@order'])\n            .map(name => {\n                const subSchema = properties[name];\n                const Field = main.getComponent(subSchema);\n                if (!Field) {\n                    return null;\n                }\n                return (\n                    <li key={`${pointer}/${name}`}>\n                        <Field\n                            schema={subSchema}\n                            level={level + 1}\n                            value={value[name]}\n                            name={name}\n                            onChange={this.onFieldChange} />\n                    </li>\n                );\n            });\n\n        return (\n            <fieldset\n                data-pointer={pointer}\n                className=\"ui-field variant-map\"\n                style={style}>\n                <header className=\"ui-field-title ui-field-object-title\">\n                    {title}\n                </header>\n                <ul className=\"ui-field-content\">\n                    {fields}\n                </ul>\n            </fieldset>\n        );\n    }\n\n}\n\nObjectField.displayName = 'Object';\n\nObjectField.propTypes = {\n    ...InputComponent.propTypes,\n    value: PropTypes.object,\n    defaultValue: PropTypes.object,\n    uiSchema: PropTypes.object.isRequired,\n    schema: PropTypes.object.isRequired\n};\n\nObjectField.defaultProps = {\n    ...InputComponent.defaultProps,\n    value: {},\n    defaultValue: {},\n    uiSchema: {}\n};\n\n\nmain.registerComponent(function (schema) {\n\n    if (schema.type === 'object') {\n        return ObjectField;\n    }\n\n});\n"],"sourceRoot":"/source/"}