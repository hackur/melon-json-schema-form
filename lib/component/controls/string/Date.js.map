{"version":3,"sources":["component/controls/string/Date.js"],"names":["DateControl","args","onChange","bind","value","props","name","actions","validate","change","render","schema","meta","title","description","error","touched","invalid","message","className","propTypes","object","isRequired","string","type","format"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAWqBA,W;;;AAEjB,+BAAqB;AAAA;;AAAA,8CAANC,IAAM;AAANA,oBAAM;AAAA;;AAAA,yDACjB,gDAASA,IAAT,EADiB;;AAEjB,kBAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AAFiB;AAGpB;;8BAEDD,Q,2BAAkB;AAAA,gBAARE,KAAQ,QAARA,KAAQ;AAAA,yBAKV,KAAKC,KALK;AAAA,gBAGVC,IAHU,UAGVA,IAHU;AAAA,gBAIVC,OAJU,UAIVA,OAJU;AAAA,gBAQVC,QARU,GAUVD,OAVU,CAQVC,QARU;AAAA,gBASVC,MATU,GAUVF,OAVU,CASVE,MATU;;;AAYdA,mBAAOH,IAAP,EAAaF,KAAb;AACAI,qBAASF,IAAT;AAEH,S;;8BAEDI,M,qBAAS;AAAA,0BAMD,KAAKL,KANJ;AAAA,gBAGDM,MAHC,WAGDA,MAHC;AAAA,gBAIDP,KAJC,WAIDA,KAJC;AAAA,gBAKDQ,IALC,WAKDA,IALC;AAAA,gBASDC,KATC,GAWDF,MAXC,CASDE,KATC;AAAA,gBAUDC,WAVC,GAWDH,MAXC,CAUDG,WAVC;AAAA,gBAcDC,KAdC,GAgBDH,IAhBC,CAcDG,KAdC;AAAA,gBAeDC,OAfC,GAgBDJ,IAhBC,CAeDI,OAfC;;;AAkBL,gBAAMC,UAAUD,WAAWD,KAAX,IAAoBA,MAAMG,OAA1C;;AAEA,gBAAMC,YAAY,6BACd,iBADc,EAEd;AACI,+BAAe,CAACF,OADpB;AAEI,iCAAiBA;AAFrB,aAFc,CAAlB;;AAQA,mBACI;AAAA;AAAA,kBAAK,WAAWE,SAAhB;AAEQN,wBACM;AAAA;AAAA;AACE,mCAAU,uBADZ;AAEGA;AAFH,iBADN,GAKM,IAPd;AAUQC,8BACM;AAAA;AAAA;AACE,mCAAU,4BADZ;AAEGA;AAFH,iBADN,GAKM,IAfd;AAiBI;AACI,0BAAK,KADT;AAEI,8BAAU,CAAC,OAAD,CAFd;AAGI,4BAAQ,EAACG,gBAAD,EAHZ;AAII,0BAAMX,IAJV;AAKI,2BAAOF,SAAS,IAAT,GAAgBO,iBAAhB,GAAiCP,KAL5C;AAMI,8BAAU,KAAKF,QANnB,GAjBJ;AAwBI,6EAAmBU,IAAnB;AAxBJ,aADJ;AA6BH,S;;;;;yBAjFgBZ,W;;;AAqFrBA,gBAAYoB,SAAZ,GAAwB;AACpBT,gBAAQ,iBAAUU,MAAV,CAAiBC,UADL;AAEpBlB,eAAO,iBAAUmB;AAFG,KAAxB;;AAKA,kCAAgB,UAAUZ,MAAV,EAAkB;;AAE9B,YACIA,OAAOa,IAAP,KAAgB,QAAhB,IACGb,OAAOc,MAAP,KAAkB,MAFzB,EAGE;AACE,mBAAOzB,WAAP;AACH;AAEJ,KATD","file":"component/controls/string/Date.js","sourcesContent":["/**\n * @file Date\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Calendar from 'melon-calendar';\nimport {registerControl} from '../../../factory';\nimport ValidityLabel from '../../ValidityLabel';\nimport cx from 'classnames';\n\nexport default class DateControl extends Component {\n\n    constructor(...args) {\n        super(...args);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange({value}) {\n\n        const {\n            name,\n            actions\n        } = this.props;\n\n        const {\n            validate,\n            change\n        } = actions;\n\n        change(name, value);\n        validate(name);\n\n    }\n\n    render() {\n\n        const {\n            schema,\n            value,\n            meta\n        } = this.props;\n\n        const {\n            title,\n            description\n        } = schema;\n\n        const {\n            error,\n            touched\n        } = meta;\n\n        const invalid = touched && error && error.message;\n\n        const className = cx(\n            'ui-control-date',\n            {\n                'state-valid': !invalid,\n                'state-invalid': invalid\n            }\n        );\n\n        return (\n            <div className={className}>\n                {\n                    title\n                        ? <header\n                            className=\"ui-control-date-title\">\n                            {title}\n                        </header>\n                        : null\n                }\n                {\n                    description\n                        ? <p\n                            className=\"ui-control-date-decription\">\n                            {description}\n                        </p>\n                        : null\n                }\n                <Calendar\n                    size=\"xxs\"\n                    variants={['fluid']}\n                    states={{invalid}}\n                    name={name}\n                    value={value == null ? schema.default : value}\n                    onChange={this.onChange} />\n                <ValidityLabel {...meta} />\n            </div>\n        );\n\n    }\n\n}\n\nDateControl.propTypes = {\n    schema: PropTypes.object.isRequired,\n    value: PropTypes.string\n};\n\nregisterControl(function (schema) {\n\n    if (\n        schema.type === 'string'\n        && schema.format === 'date'\n    ) {\n        return DateControl;\n    }\n\n});\n"],"sourceRoot":"/source/"}