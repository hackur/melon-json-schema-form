{"version":3,"sources":["component/controls/Object.js"],"names":["ObjectControl","shouldComponentUpdate","nextProps","props","render","schema","uiSchema","name","title","properties","keys","$order","Object","fields","map","key","childName","propTypes","string","isRequired","object","defaultProps","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAmBqBA,a;;;;;;;;;gCAEjBC,qB,kCAAsBC,S,EAAW;AAC7B,mBAAO,CAAC,+BAAa,KAAKC,KAAlB,EAAyBD,SAAzB,CAAR;AACH,S;;gCAEDE,M,qBAAS;AAAA,yBAMD,KAAKD,KANJ;AAAA,gBAGDE,MAHC,UAGDA,MAHC;AAAA,gBAIDC,QAJC,UAIDA,QAJC;AAAA,gBAKDC,IALC,UAKDA,IALC;AAAA,gBASDC,KATC,GAWDH,MAXC,CASDG,KATC;AAAA,gBAUDC,UAVC,GAWDJ,MAXC,CAUDI,UAVC;;;AAaL,gBAAMC,OAAOJ,SAASK,MAAT,GACP,oCAAeF,UAAf,EAA2BH,SAASK,MAApC,CADO,GAEPC,OAAOF,IAAP,CAAYD,UAAZ,CAFN;;AAIA,gBAAMI,SAASH,KACVI,GADU,CACN,qBAAa;;AAEd,oBAAMC,WAASR,IAAT,IAAgBA,OAAO,GAAP,GAAa,EAA7B,IAAkCS,SAAxC;;AAEA,uBACI;AACI,yBAAKD,GADT;AAEI,0BAAMA,GAFV;AAGI,4BAAQN,WAAWO,SAAX,CAHZ;AAII,8BAAUV,SAASU,SAAT,CAJd;AAKI,iDALJ;AAMI;AANJ,kBADJ;AAWH,aAhBU,CAAf;;AAkBA,mBACI;AAAA;AAAA,kBAAK,WAAU,mBAAf;AAEQR,wBAEQ;AAAA;AAAA;AACI,mCAAU,yBADd;AAEKA;AAFL,iBAFR,GAOM,IATd;AAWI;AAAA;AAAA,sBAAK,WAAU,2BAAf;AACKK;AADL;AAXJ,aADJ;AAkBH,S;;;;;yBA3DgBb,a;;;AAgErBA,kBAAciB,SAAd,GAA0B;AACtBV,cAAM,iBAAUW,MAAV,CAAiBC,UADD;AAEtBb,kBAAU,iBAAUc,MAAV,CAAiBD,UAFL;AAGtBd,gBAAQ,iBAAUe,MAAV,CAAiBD;AAHH,KAA1B;;AAMAnB,kBAAcqB,YAAd,GAA6B;AACzBf,kBAAU;AADe,KAA7B;;AAIA,kCAAgB,UAAUD,MAAV,EAAkB;;AAE9B,YAAIA,OAAOiB,IAAP,KAAgB,QAApB,EAA8B;AAC1B,mBAAOtB,aAAP;AACH;AAEJ,KAND","file":"Object.js","sourcesContent":["/**\n * @file object render\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {registerControl} from '../../factory';\nimport shallowEqual from 'melon-core/util/shallowEqual';\nimport Control from './Control';\nimport Field from '../Field';\nimport {getOrderedKeys} from '../../util/getOrderedKeys';\nimport {format} from '../../util/field';\n\n/**\n * ObjectControl\n *\n * @class\n * @param {*} props 属性\n */\nexport default class ObjectControl extends Component {\n\n    shouldComponentUpdate(nextProps) {\n        return !shallowEqual(this.props, nextProps);\n    }\n\n    render() {\n\n        const {\n            schema,\n            uiSchema,\n            name\n        } = this.props;\n\n        const {\n            title,\n            properties\n        } = schema;\n\n        const keys = uiSchema.$order\n            ? getOrderedKeys(properties, uiSchema.$order)\n            : Object.keys(properties);\n\n        const fields = keys\n            .map(childName => {\n\n                const key = `${name}${name ? '.' : ''}${childName}`;\n\n                return (\n                    <Field\n                        key={key}\n                        name={key}\n                        schema={properties[childName]}\n                        uiSchema={uiSchema[childName]}\n                        control={Control}\n                        format={format}\n                    />\n                );\n\n            });\n\n        return (\n            <div className=\"ui-control-object\">\n                {\n                    title\n                        ? (\n                            <header\n                                className=\"ui-control-object-title\">\n                                {title}\n                            </header>\n                        )\n                        : null\n                }\n                <div className=\"ui-control-object-content\">\n                    {fields}\n                </div>\n            </div>\n        );\n\n    }\n\n\n}\n\nObjectControl.propTypes = {\n    name: PropTypes.string.isRequired,\n    uiSchema: PropTypes.object.isRequired,\n    schema: PropTypes.object.isRequired\n};\n\nObjectControl.defaultProps = {\n    uiSchema: {}\n};\n\nregisterControl(function (schema) {\n\n    if (schema.type === 'object') {\n        return ObjectControl;\n    }\n\n});\n"]}