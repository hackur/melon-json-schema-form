{"version":3,"sources":["component/controls/Boolean.js"],"names":["factory","type","BooleanField","args","onChange","bind","shouldComponentUpdate","nextProps","props","value","name","actions","validate","change","render","schema","meta","title","description","touched","error","invalid","message","className","displayName","propTypes","bool","registerControl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;QAOYA,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKL,QAAMC,sBAAO,SAAb;;QAEcC,Y;;;AAEjB,gCAAqB;AAAA;;AAAA,8CAANC,IAAM;AAANA,oBAAM;AAAA;;AAAA,yDACjB,gDAASA,IAAT,EADiB;;AAEjB,kBAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AAFiB;AAGpB;;+BAEDC,qB,kCAAsBC,S,EAAW;AAC7B,mBAAO,CAAC,+BAAaA,SAAb,EAAwB,KAAKC,KAA7B,CAAR;AACH,S;;+BAEDJ,Q,2BAAkB;AAAA,gBAARK,KAAQ,QAARA,KAAQ;AAAA,yBAKV,KAAKD,KALK;AAAA,gBAGVE,IAHU,UAGVA,IAHU;AAAA,gBAIVC,OAJU,UAIVA,OAJU;AAAA,gBAQVC,QARU,GAUVD,OAVU,CAQVC,QARU;AAAA,gBASVC,MATU,GAUVF,OAVU,CASVE,MATU;;;AAYdA,mBAAOH,IAAP,EAAaD,KAAb;AACAG,qBAASF,IAAT;AACH,S;;+BAEDI,M,qBAAS;AAAA,0BAMD,KAAKN,KANJ;AAAA,gBAGDC,KAHC,WAGDA,KAHC;AAAA,gBAIDM,MAJC,WAIDA,MAJC;AAAA,gBAKDC,IALC,WAKDA,IALC;AAAA,gBAQEC,KARF,GAQwBF,MARxB,CAQEE,KARF;AAAA,gBAQSC,WART,GAQwBH,MARxB,CAQSG,WART;AAAA,gBASEC,OATF,GASoBH,IATpB,CASEG,OATF;AAAA,gBASWC,KATX,GASoBJ,IATpB,CASWI,KATX;;AAUL,gBAAMC,UAAUF,WAAWC,KAAX,IAAoBA,MAAME,OAA1C;;AAEA,gBAAMC,YAAY,6BACd,oBADc,EAEd;AACI,+BAAe,CAACF,OADpB;AAEI,iCAAiBA;AAFrB,aAFc,CAAlB;;AAQA,mBACI;AAAA;AAAA,kBAAK,WAAWE,SAAhB;AAEQN,wBAEQ;AAAA;AAAA,sBAAQ,WAAU,0BAAlB;AACKA;AADL,iBAFR,GAMM,IARd;AAWQC,8BAEQ;AAAA;AAAA,sBAAG,WAAU,gCAAb;AACKA;AADL,iBAFR,GAMM,IAjBd;AAmBI;AAAA;AAAA,sBAAK,WAAU,4BAAf;AACI;AACI,mCAAW,IADf;AAEI,oCAAY,KAFhB;AAGI,gCAAQ,EAACG,gBAAD,EAHZ;AAII,+BAAOZ,SAAS,IAAT,GAAgBM,iBAAhB,GAAiCN,KAJ5C;AAKI,kCAAU,KAAKL,QALnB;AADJ,iBAnBJ;AA2BI,6EAAmBY,IAAnB;AA3BJ,aADJ;AAgCH,S;;;;;yBA/EgBd,Y;;;AAmFrBA,iBAAasB,WAAb,GAA2BvB,IAA3B;;AAEAC,iBAAauB,SAAb,GAAyB;AACrBhB,eAAO,iBAAUiB;AADI,KAAzB;;AAIA1B,YAAQ2B,eAAR,CAAwB,UAAUZ,MAAV,EAAkB;;AAEtC,YAAIA,OAAOd,IAAP,KAAgB,SAApB,EAA+B;AAC3B,mBAAOC,YAAP;AACH;AAEJ,KAND","file":"Boolean.js","sourcesContent":["/**\n * @file BooleanField\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Toggle from 'melon/Toggle';\nimport * as factory from '../../factory';\nimport shallowEqual from 'melon-core/util/shallowEqual';\nimport cx from 'classnames';\nimport ValidityLabel from '../ValidityLabel';\n\nexport const type = 'Boolean';\n\nexport default class BooleanField extends Component {\n\n    constructor(...args) {\n        super(...args);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n    }\n\n    onChange({value}) {\n\n        const {\n            name,\n            actions\n        } = this.props;\n\n        const {\n            validate,\n            change\n        } = actions;\n\n        change(name, value);\n        validate(name);\n    }\n\n    render() {\n\n        const {\n            value,\n            schema,\n            meta\n        } = this.props;\n\n        const {title, description} = schema;\n        const {touched, error} = meta;\n        const invalid = touched && error && error.message;\n\n        const className = cx(\n            'ui-control-boolean',\n            {\n                'state-valid': !invalid,\n                'state-invalid': invalid\n            }\n        );\n\n        return (\n            <div className={className}>\n                {\n                    title\n                        ? (\n                            <header className=\"ui-control-boolean-title\">\n                                {title}\n                            </header>\n                        )\n                        : null\n                }\n                {\n                    description\n                        ? (\n                            <p className=\"ui-control-boolean-description\">\n                                {description}\n                            </p>\n                        )\n                        : null\n                }\n                <div className=\"ui-control-boolean-content\">\n                    <Toggle\n                        trueValue={true}\n                        falseValue={false}\n                        states={{invalid}}\n                        value={value == null ? schema.default : value}\n                        onChange={this.onChange} />\n                </div>\n                <ValidityLabel {...meta} />\n            </div>\n        );\n\n    }\n\n}\n\nBooleanField.displayName = type;\n\nBooleanField.propTypes = {\n    value: PropTypes.bool\n};\n\nfactory.registerControl(function (schema) {\n\n    if (schema.type === 'boolean') {\n        return BooleanField;\n    }\n\n});\n"]}